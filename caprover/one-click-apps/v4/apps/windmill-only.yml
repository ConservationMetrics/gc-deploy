captainVersion: 4

services:
    $$cap_appname:
        image: ghcr.io/windmill-labs/windmill:$$cap_app_version
        expose:
            - 8000
        environment:
            DATABASE_URL: $$cap_database_url
            DATABASE_CONNECTIONS: $$cap_server_database_connections
            MODE: server
        volumes:
            - $$cap_appname-worker-logs:/tmp/windmill/logs
        caproverExtra:
            containerHttpPort: 8000

    $$cap_appname-worker:
        image: ghcr.io/windmill-labs/windmill:$$cap_app_version
        volumes:
            # mount the docker socket to allow to run docker containers from within the workers
            - /var/run/docker.sock:/var/run/docker.sock
            - $$cap_appname-worker-dependency-cache:/tmp/windmill/cache
            - $$cap_appname-worker-logs:/tmp/windmill/logs
            - /mnt/persistent-storage:/persistent-storage
        environment:
            DATABASE_URL: $$cap_database_url
            DATABASE_CONNECTIONS: $$cap_worker_database_connections
            MODE: worker
            WORKER_GROUP: default
        caproverExtra:
            notExposeAsWebApp: 'true'

    $$cap_appname-worker-native:
        image: ghcr.io/windmill-labs/windmill:$$cap_app_version
        volumes:
            - $$cap_appname-worker-logs:/tmp/windmill/logs
            - /mnt/persistent-storage:/persistent-storage
        environment:
            DATABASE_URL: $$cap_database_url
            DATABASE_CONNECTIONS: $$cap_worker_database_connections
            MODE: worker
            WORKER_GROUP: native
            SLEEP_QUEUE: 200
        caproverExtra:
            notExposeAsWebApp: 'true'

caproverOneClickApp:
    instructions:
        start: |-
            Windmill is an open-source alternative to Retool, Airplane and n8n to build all your internal tools (endpoints, workflows, UIs) through simple scripts - in Typescript, Python, Go & Bash - and low code builders.

            Before Deploying, you must set up a database for Windmill to use. Instructions differ depending on whether
            you have access to the Postgres superuser.

            ## Database you completely control (e.g. running on caprover)

            As a PostgreSQL database admin user, all you need is to create a `windmill` database:
            ```sql
            CREATE DATABASE windmill;
            ```

            **Example** for database hosted in CapRover:
            ```bash
            PSQL_CONTAINER=$(sudo docker ps --filter "name=srv-captain--postgres" --format "{{.ID}}")
            sudo docker exec -it $PSQL_CONTAINER psql -U postgres -c "CREATE DATABASE windmill;"
            ```

            Then use the database admin login in the "Database URL" variable below.

            ## Database setup without using a Postgres superuser (AWS, GCP, Azure, Neon)

            Cloud-hosted database servers typically do not let you access the Postgres superuser, but
            only a lesser "admin" user.

            **Azure-specific steps:**
            1. In Azure's portal, navigate to database and open "Server parameters". Set `azure.extensions = UUID-OSSP`
            2. Login to database as admin to create a `windmill` database and the user that Windmill will use to login to it:
                ```sql
                CREATE DATABASE windmill;
                CREATE USER windmill_login PASSWORD 'changeme';
                -- windmill_login needs admin permission on this database (but not on others)
                GRANT ALL PRIVILEGES ON DATABASE windmill TO windmill_login;

                -- The new user "windmill_login" cannot read tables in other databases
                -- but can connect to them and list the tables.  To prevent that you may optionally
                -- run this for all other databases on your server:
                --   REVOKE CONNECT ON DATABASE some_other_db FROM windmill_login;

                GRANT azure_pg_admin TO windmill_login;
                ALTER USER windmill_login CREATEROLE;
                ```
            3. Keep following the continued instructions below, editing the `init-db-as-superuser.sql` to remove "WITH BYPASSRLS".

            **On all cloud-hosted databases (including Azure, after following the steps above):**
            follow this, connecting as `windmill_login` if you created it above, otherwise connecting as the admin user:
            https://www.windmill.dev/docs/advanced/self_host#run-windmill-without-using-a-postgres-superuser

            **If you used `windmill_login`,**
            make sure that the user used in the `DATABASE_URL` passed to Windmill has the role `windmill_admin` and `windmill_user`:
            ```sql
            GRANT windmill_admin TO windmill_login;
            GRANT windmill_user TO windmill_login;
            ```

        end: |-
            Windmill has been successfully deployed!

            Now you can access it at `https://$$cap_appname.$$cap_root_domain`

            Follow the instructions for first-time login: https://www.windmill.dev/docs/advanced/self_host#first-time-login

            Language Server Protocol (LSP) support was not installed. If you desire code assistants
            and additional language-specific functionality, follow the instructions at
            https://github.com/ConservationMetrics/gc-deploy/blob/main/caprover/INSTALL_GC_STACK.md#code-assistants

    displayName: Windmill - No Database
    isOfficial: true
    description: Windmill is developer infrastructure for internal tools. You will need to create and configure the database information manually. Intended for advanced users.
    documentation: https://www.windmill.dev/
    variables:
        - id: $$cap_app_version
          label: Windmill Version
          defaultValue: '1.518.2'
          description: Checkout their github page for the valid tags https://github.com/windmill-labs/windmill/releases
          validRegex: /^([^\s^\/])+$/

        - id: $$cap_database_url
          label: Database URL
          defaultValue: 'postgres://windmill_login:changeme@db:5432/windmill'
          description: |-
              You must have a PostgreSQL database already deployed: either externally,
              or as a One-Click App on this same instance.

        - id: $$cap_server_database_connections
          label: The max number of connections in the server's database connection pool
          defaultValue: "5"
          validRegex: /^[1-9][0-9]?$/

        - id: $$cap_worker_database_connections
          label: The max number of connections in a worker's database connection pool.
          defaultValue: "5"
          description: |-
              Note that there are multiple worker processes, each one creating its own pool.
              This value is per worker.
          validRegex: /^[1-9]$/
